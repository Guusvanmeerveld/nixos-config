#
# WARNING: Make sure to use the docker-compose.yml of the current release:
#
# https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml
#
# The compose file on main may not be compatible with the latest release.
#

name: immich

services:
  server:
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    container_name: "immich-server"
    
    depends_on:
      - redis
      - database

    restart: unless-stopped

    env_file:
      - .env

    command: ['start.sh', 'immich']

    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro

    networks:
      - immich
      - intranet

  microservices:
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    container_name: "immich-microservices"

    depends_on:
      - redis
      - database

    restart: unless-stopped

    env_file:
      - .env

    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/hardware-transcoding
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding

    command: ['start.sh', 'microservices']

    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro

    networks:
      - immich

  machine-learning:
    # For hardware acceleration, add one of -[armnn, cuda, openvino] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    container_name: "immich-machine-learning"

    restart: unless-stopped

    env_file:
      - .env

       # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, openvino, openvino-wsl] for accelerated inference - use the `-wsl` version for WSL2 where applicable

    volumes:
      - model-cache:/cache

    networks:
      - immich

  redis:
    image: registry.hub.docker.com/library/redis:6.2-alpine@sha256:84882e87b54734154586e5f8abd4dce69fe7311315e2fc6d67c29614c8de2672
    container_name: "immich-redis"

    restart: unless-stopped

    networks:
      - immich

  database:
    image: registry.hub.docker.com/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    container_name: "immich-postgres"

    restart: unless-stopped

    command: ["postgres", "-c" ,"shared_preload_libraries=vectors.so", "-c", 'search_path="$$user", public, vectors', "-c", "logging_collector=on", "-c", "max_wal_size=2GB", "-c", "shared_buffers=512MB", "-c", "wal_compression=on"]

    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'

    volumes:
      - ${DB_DATA_LOCATION}:/var/lib/postgresql/data

    networks:
      - immich

networks:
  intranet:
    external: true

  immich:

volumes:
  model-cache:


